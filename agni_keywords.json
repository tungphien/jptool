{"keywords": ["get all the ethernet interfaces", "validate chassis spmb state", "get interface and vlan new list", "get address family from nlri_type_session", "flap interfaces and restart rpd chassisd", "get iso addresses without selectors", "get device contains blk state and alt role", "steady state checks", "verify ping with rapid no-resolve and count", "get ifd name", "verify_get_ae_interface_list", "sleep", "check ntp server ip address", "get delete ssh default configs", "get non traffic flwng interfaces", "catenate", "verify custom syslog error messages", "get handle", "list should contain sub list", "get master re name", "get root bridge device", "get upper tolerance", "detect core on junos device", "convert threshold", "should be equal", "remove add ntp server", "get ip separated with slash", "get link list of minimum links configured for specific ae", "remove values from list", "chassis cb state", "check ntp configuration", "get encryption algorithm name", "evaluate", "core-dumps for stand-alone and dual re", "get length", "restart process", "poll for vsc8284 error", "get differance in time between commits", "get interfaces contains cascade", "verify and match pattern", "check lacp stats flow", "on cli", "check cpu usage", "get index from list", "compare lag speed with mem link speed", "verify ping", "capture commands output", "get ifd name list", "get northstar", "replace string", "get current controller name", "upgrade master re", "get bandwidth number", "get current date", "get interface name from tcpdump", "get traffic rate", "verify ping with no-resolve and count", "check file size greater than zero", "create a set policy for 5000 application", "switch to superuser", "get model for device", "get traffic flwng device handle for all", "should not contain any", "should contain", "get cp dp convergence", "create a address set with 1024 individual address", "verify northstar", "get ipsec index ids", "show chassis fpc cpu utilization", "should contain any", "execute particular group show cmd", "get all ip destinations from lldp local interfaces", "get regexp matches", "create set multiple applications protocol tcp", "get_interface_appended_with_unit_number", "connect to device", "get fragment state and check traffic stats", "get physical interface name", "get lower tolerance", "check traffic on device where timeout is added", "deactivate activate config", "delete set command creation for routing interfaces", "snmp statistics on snmp server packet check", "get the position of the modified as", "connect to device via python", "deactivate specified ae interface", "create list", "get from list", "convert date", "should not be equal", "download file", "start specific bgp emulation", "verify chassis fpc state online", "execute ssh default configs", "disable enable config", "check ping connection", "reboot device", "stop tcpdump", "stop ixia traffic items", "get intrfc appended with zero", "aggregate of list elements", "check temperature and cooling system speeds state", "should be equal as strings", "get protocol name", "get processid and kill process", "verify syslog error messages", "check for equal load balance", "split string", "check interface with vlan present in the output", "bfd session count", "append to list", "execute shell command on device", "add interface to interface list", "verify and switch master", "check bgp summary output and get bgp rib name", "sum of list elements", "stop ixia protocols", "command check copied file", "return file copy cli", "get trffic flowing device handle", "verify fpc max fatal error", "verify ae statistics", "stream based stop traffic", "should be true", "get interface by appending zero to interface", "should match", "upgrade backup re and wait until it goes to present state", "show chassis environment", "get server mac address", "get lines matching pattern", "return ssh configured groups name", "get dh group name", "remove from list", "activate specified ae interface", "verify pfe terse state online", "list should not contain value", "log messages for routing", "show version for stand-alone and dual re", "check bgp summary output has ip and state as established", "verify ping with rapid no-resolve", "get time and index of traffic flowing device", "get line", "kill daemon", "set variable", "get traffic flwng interfaces", "start tcpdump", "confirm_traffic_drops", "stop specific bgp emulation", "get time string", "start ixia traffic items", "check connect to device multiple times", "lists should be equal", "check error message for ethernet interface", "delete set command creation for interfaces", "generate a command set with 5000 address book objects to a specific file", "get traffic flwng device", "verify snmp output with device output", "get ssh default configs", "check count for lines matching regexp", "get interface appended with unit number as list", "telemetry", "verify chassis fpc pic status online", "return telnet configured groups name", "execute config command on device", "clear and check ixia traffic statistics ecmp", "get ike exchange type", "get server link ip", "reconnect to device", "should match regexp", "subtract time from date", "verify chassis sfb or sibs state online", "convert to uppercase", "calculate pps for each member link", "verify interface is down during the hold time", "get compare message of vlan", "run keyword if", "get non traffic flwng devices", "validate chassis sibs state online and active", "set test variable", "modify traffic rate for stream", "check time got synced from ntp", "should not contain", "flap interface", "identifying backup re", "get the fpc_slot", "check ntp status refid", "get month and day", "should not be true", "set delete config", "upload file", "execute cli command on device", "snmp statistics on snmp server", "stream based start traffic", "add time to date"], "content": {"get all the ethernet interfaces": "${interface_list}    Get all the ethernet interfaces     device=${device}", "validate chassis spmb state": "Validate Chassis Spmb State", "get interface and vlan new list": "Get Interface and vlan new List", "get address family from nlri_type_session": "get address family from nlri_type_session", "flap interfaces and restart rpd chassisd": "Flap Interfaces And Restart Rpd Chassisd", "get iso addresses without selectors": "Get ISO Addresses Without Selectors    iso_address_list=${nsap_address_list}", "get device contains blk state and alt role": "Get Device Contains BLK State And ALT Role    device_list=${device_list}", "steady state checks": "Steady State Checks", "verify ping with rapid no-resolve and count": "Verify Ping With Rapid No-resolve And Count", "get ifd name": "Get Ifd Name", "verify_get_ae_interface_list": "Verify_get_ae_interface_list", "sleep": "Sleep    60", "check ntp server ip address": "Check NTP server ip address", "get delete ssh default configs": "Get Delete Ssh Default Configs", "get non traffic flwng interfaces": "${non_traffic_flowing_intrfc_list}  Get Non Traffic flwng Interfaces  interface_list=${interface_list}  index=${index}", "catenate": "${ip_port} =  Catenate    SEPARATOR=.    ${host_ip}    22", "verify custom syslog error messages": "Verify Custom Syslog Error Messages    device=${device}    msg=${custom_err_message}", "get handle": "${dh}    Get Handle    resource=${device}", "list should contain sub list": "${result1}   List Should Contain Sub List   ${ntp_server_ip_list}   ${refid_list}", "get master re name": "${master_RE}        Get Master Re Name      resource=${device}", "get root bridge device": "Get Root Bridge Device    device_list=${device_list}", "get upper tolerance": "Get Upper Tolerance", "detect core on junos device": "${core_status_list}=    Detect Core On Junos Device  core_path=${core_path}  resource=${device}", "convert threshold": "${threshold}    Convert Threshold    threshold=${adjust_threshold_absolute}", "should be equal": "Should be equal    ${options2_value}    ${None}", "remove add ntp server": "Remove Add NTP Server    device=${device}", "get ip separated with slash": "${ip_on_interface}  Get IP Separated with Slash  ip_with_slash=${ip_on_interface}", "get link list of minimum links configured for specific ae": "Get Link list Of Minimum links Configured for Specific AE", "remove values from list": "Remove Values From List    ${device_list}    ${root_device}", "chassis cb state": "Chassis Cb State", "check ntp configuration": "Check NTP configuration", "get encryption algorithm name": "Get Encryption Algorithm Name", "evaluate": "${time_after_set_ntp_list_type}    Evaluate  type($time_after_set_ntp_list).__name__", "core-dumps for stand-alone and dual re": "Core-dumps For Stand-alone And Dual Re  device=${device}", "get length": "${length}    Get Length    ${deactivate_activate_static_lsp_list}", "restart process": "Restart Process", "poll for vsc8284 error": "Poll For Vsc8284 Error", "get differance in time between commits": "${time_taken_to_shift_traffic}  Get Differance In Time Between Commits  commit1=${response1}  commit2=${result_str}", "get interfaces contains cascade": "Get Interfaces Contains Cascade    device=${device}", "verify and match pattern": "Verify and match pattern", "check lacp stats flow": "Check Lacp Stats Flow", "on cli": "On Cli     command=clear interfaces statistics ${interface_name}     device=${device}", "check cpu usage": "check cpu usage", "get index from list": "${index}  Get Index From List  list_of_string_and_index=${result_string}", "compare lag speed with mem link speed": "Compare Lag Speed With Mem Link Speed", "verify ping": "Verify Ping    device=${device}    final_ip_destinations_list=${final_ip_destinations_list}", "capture commands output": "Capture Commands Output", "get ifd name list": "${interfaces_list}=    Get Ifd Name List    ${logical_interfaces_list}", "get northstar": "${return_value}    Get NorthStar    device_handle=${northstar_api_handle}    info=facilities_get:elements", "replace string": "${method} =  Replace String  ${authentication_method}  rsa  RSA", "get current controller name": "${controller}=    Get Current Controller Name    ${dh}", "upgrade master re": "Upgrade Master RE       ${device}      ${master_RE}     ${image_path}       ${image_version}       ${vmhost}      ${sleep_time}", "get bandwidth number": "${new_device_bandwidth}    Get bandwidth number    rate=${device_bandwidth}", "get current date": "${start_time}=    Get Current Date    exclude_millis=true", "get interface name from tcpdump": "${intf_name}    Get Interface Name From Tcpdump    device_handle=${dh}    ip_address=${host_address}", "get traffic rate": "${traffic_rate}    Get Traffic Rate    rate=${maximum_bandwidth}    flag=1", "verify ping with no-resolve and count": "Verify Ping With No-resolve And Count", "check file size greater than zero": "Check File Size Greater Than Zero", "create a set policy for 5000 application": "Create A Set Policy For 5000 Application", "switch to superuser": "Switch To Superuser    ${dh}    password=${password}", "get model for device": "Get Model For Device", "get traffic flwng device handle for all": "${dvc_hndl_list}  Get Traffic flwng Device Handle For All  device_list=${device_list} ", "should not contain any": "Should Not Contain Any    ${response}    Timeout: No Response", "should contain": "Should Contain    ${response}    0% packet loss", "get cp dp convergence": "Get CP DP Convergence", "create a address set with 1024 individual address": "Create A Address Set With 1024 Individual Address", "verify northstar": "Verify NorthStar    device_handle=${northstar_api_handle}    address=${ifa_address}    operator=is-equal    value=${metric}    check=specificlinkdata_get:metric_for_link", "get ipsec index ids": "Get Ipsec Index Ids", "show chassis fpc cpu utilization": "show chassis fpc cpu utilization", "should contain any": "Should Contain Any    ${response}    ${device_username}    ${hostname}    run show chassis l3-ha-mode fabric status", "execute particular group show cmd": "Execute Particular Group Show Cmd  dh=${traffic_flowing_device_handle_before_timeout}  system_related_cli=${system_related_cli_boolean}    isis_ospf_ldp_cli=${isis_ospf_ldp_cli_boolean}    bgp_mpls_cli=${bgp_mpls_cli_boolean}    bgp_mpls_realted_cmd=${bgp_mpls_realted_cmd_list}   isis_ospf_ldp_related_show_cmd=${isis_ospf_ldp_related_show_cmd_list}    system_related_cmd=${system_related_cmd_list}", "get all ip destinations from lldp local interfaces": "${final_ip_destinations_list}    Get All IP Destinations From Lldp Local Interfaces    device=${device}    lldp_local_interfaces=${lldp_local_interfaces_list}", "get regexp matches": "${packet_loss_list}    Get Regexp Matches    ${output}    (\\\\d+).\\\\s+packet    1", "create set multiple applications protocol tcp": "Create Set Multiple Applications Protocol Tcp    application_number=100000    application_group_name=application_set_100000_application    application_name=tcp", "get_interface_appended_with_unit_number": "${intrfc_with_vlan_id}    Get_interface_Appended_with_unit_number   interface=${interface}  unit_num=${vlan_id}", "connect to device": "Connect to device    host=${device_ip}    connect_mode=ssh    user=${tacacs_device_login_user_name}    password=${tacacs_device_login_password}", "get fragment state and check traffic stats": "Get Fragment state And Check Traffic Stats", "get physical interface name": "Get Physical Interface Name", "get lower tolerance": "Get Lower Tolerance", "check traffic on device where timeout is added": "Check Traffic On Device Where Timeout Is Added    dh=${traffic_flowing_device_handle_before_timeout}   interface=${traffic_flowing_intrfc_before_timeout}   expected_traffic=${expected_traffic}    timeout=${expected_time_to_shift_traffic}", "deactivate activate config": "Deactivate Activate config", "delete set command creation for routing interfaces": "Delete Set Command Creation For Routing Interfaces", "snmp statistics on snmp server packet check": "Snmp statistics on snmp server packet check", "get the position of the modified as": "Get The Position Of The Modified AS", "connect to device via python": "Connect To Device Via Python    dh=${server_handle}    host_ip=${device_ip}    user_name=${device_user}    password=${device_password}", "deactivate specified ae interface": "Deactivate Specified AE Interface    ${device}    ${interface}", "create list": "${snmp_config_list}    Create List    set snmp location ${snmp_location}    set snmp contact ${snmp_contact}    set snmp trap-options source-address ${device_ip}    set snmp community ${snmp_community_name} authorization read-only    set snmp community ${snmp_community_name} clients 0.0.0.0/0 restrict    set snmp trap-group ${snmp_community_name} version all", "get from list": "${time_before_set}    Get From List    ${time_before_set_list}    0", "convert date": "${time_setting_converted}    Convert Date    ${time_setting}    result_format=%Y%m%d%H%M.%S", "should not be equal": "Should not be equal       ${tcp_receive}   ${tcp_receive_after_wait}", "download file": "Download File", "start specific bgp emulation": "Start Specific BGP Emulation", "verify chassis fpc state online": "Verify Chassis Fpc State Online", "execute ssh default configs": "Execute Ssh Default Configs", "disable enable config": "Disable Enable config", "check ping connection": "Check Ping Connection    device=${device_handle}    destination=${ipv6_destination}    source=${ipv6_source}", "reboot device": "${status}   Reboot device    ${dh}   mode=cli   wait=180    all=True     timeout=360    interval=40", "stop tcpdump": "Stop Tcpdump    device=${dh}    pid=${tcp_pid}", "stop ixia traffic items": "Stop Ixia Traffic Items", "get intrfc appended with zero": "${trfc_flwing_interface_with_zero}    Get Intrfc Appended With Zero     interface=${traffic_flowing_intrfc}", "aggregate of list elements": "Aggregate Of List Elements", "check temperature and cooling system speeds state": "Check Temperature And Cooling System Speeds State", "should be equal as strings": "Should Be Equal As Strings               ${snmpwalk_before_reboot}    ${snmpwalk_after_reboot}", "get protocol name": "Get Protocol Name", "get processid and kill process": "Get Processid and Kill Process    res=${response1}    device=${dh}", "verify syslog error messages": "Verify Syslog Error Messages    device=${device}", "check for equal load balance": "Check For Equal Load Balance", "split string": "@{words} =  Split String    ${added_time}", "check interface with vlan present in the output": "check interface with vlan present in the output   interface_vlan_list=${interface_vlan_list}    dh=${dh}   msg_lst=${msg_lst}", "bfd session count": "bfd session count", "append to list": "Append To List    ${snmp_config_list}    set snmp trap-group ${snmp_community_name} targets ${snmp_trap_group_targets}", "execute shell command on device": "${snmp_response}    Execute Shell Command On Device    ${server_handle}    command=snmpwalk -v2c -c ${snmp_community_name} ${device_ip} ${snmp_oid}    timeout=${120}", "add interface to interface list": "${non_traffic_flowing_intrfc_list}  Add Interface To Interface List  interface_list1=${non_traffic_flowing_intrfc_list}  interface=${traffic_flowing_intrfc_before_timeout}", "verify and switch master": "Verify and Switch Master        ${device}", "check bgp summary output and get bgp rib name": "${bgp_Rib_name}  Check bgp Summary Output and get bgp Rib name   response=${response}", "sum of list elements": "Sum Of List Elements", "stop ixia protocols": "Stop Ixia Protocols", "command check copied file": "Command check copied file", "return file copy cli": "Return File Copy Cli", "get trffic flowing device handle": "${index}  Get Trffic Flowing Device Handle  device_list=${device_list}  interface_list=${interface_list}   expected_traffic=${expected_traffic}", "verify fpc max fatal error": "Verify FPC Max Fatal error", "verify ae statistics": "Verify ae statistics", "stream based stop traffic": "Stream Based Stop Traffic", "should be true": "\"Should Be True     ${time_before_set} < ${time_after_set_ntp}\"", "get interface by appending zero to interface": "${non_trfc_flwing_interface_with_zero_list}  Get Interface By Appending Zero To Interface  interface_list=${non_traffic_flowing_intrfc_list}", "should match": "Should Match    ${snmp}    SNMP*", "upgrade backup re and wait until it goes to present state": "Upgrade Backup RE and Wait Until It Goes To Present State      ${device}       ${backup_RE}      ${image_path}       ${image_version}     ${vmhost}      ${sleep_time}", "show chassis environment": "Show Chassis Environment", "get server mac address": "${mac_of_server_link}    Get Server Mac Address   ifconfig_op=${response}", "get lines matching pattern": "Get Lines Matching Pattern    pattern=jnxJsSPUMonitoringMemoryUsage.\\\\d+\\\\s+\\\\=\\\\s+\\\\d+    match_count=1    log_op=${response}", "return ssh configured groups name": "Return ssh configured groups name", "get dh group name": "Get Dh Group Name", "remove from list": "${added_time} =  Remove From List    ${words}    0", "activate specified ae interface": "Activate Specified AE Interface    ${device}    ${interface}", "verify pfe terse state online": "Verify Pfe Terse State Online", "list should not contain value": "List Should Not Contain Value    ${interfaces_list}    ${interface_disable}", "log messages for routing": "Log Messages For Routing    device=${device}    line_count=0", "show version for stand-alone and dual re": "Show Version For Stand-alone And Dual Re", "check bgp summary output has ip and state as established": "Check bgp Summary Output Has Ip and State as Established  ip=${ip_to_check_on_northstar}   response=${response}", "verify ping with rapid no-resolve": "Verify Ping With Rapid No-resolve", "get time and index of traffic flowing device": "${result_string}  Get Time and Index of Traffic Flowing Device  device_list=${non_traffic_flowing_device_list}  interface_list=${non_traffic_flowing_intrfc_list}  expected_traffic=${expected_traffic}  sleep_timeout=${expected_time_to_shift_traffic}", "get line": "${latest_modified_file}    Get Line    ${response}    1", "kill daemon": "Kill Daemon", "set variable": "\"${device_ip}=    Set Variable    ${tv[${device}__${controller}__mgt-ip]}\"", "get traffic flwng interfaces": "${traffic_flowing_intrfc}  Get Traffic flwng Interfaces  interface_list=${interface_list}  index=${index}", "start tcpdump": "${tcp_pid}    Start Tcpdump    device=${dh}    pcapfile=syslog.pcap    interface=${intf_name}    port=514", "confirm_traffic_drops": "confirm_traffic_drops", "stop specific bgp emulation": "Stop Specific BGP Emulation", "get time string": "${result_str}  Get Time String  list_of_string_and_index=${result_string}", "start ixia traffic items": "Start Ixia Traffic Items", "check connect to device multiple times": "Check connect to device multiple times    connect_mode=ssh", "lists should be equal": "Lists Should Be Equal    ${swap_label_list}    ${index_list}", "check error message for ethernet interface": "Check Error Message For Ethernet Interface    device=${device}   interface_list=${interface_list}", "delete set command creation for interfaces": "${cmdlist}    Delete Set Command Creation For Interfaces    action=delete", "generate a command set with 5000 address book objects to a specific file": "Generate A Command Set With 5000 Address Book Objects To A Specific File    generated_file_path=/var/tmp/5000_address_book_objects.txt", "get traffic flwng device": "${traffic_flowing_device}  Get Traffic flwng Device  device_list=${non_traffic_flowing_device_list}  index=${index}", "verify snmp output with device output": "Verify Snmp Output With Device Output      snmp_output=${snmp_response}    device_output=${device_response}", "get ssh default configs": "Get Ssh Default Configs", "check count for lines matching regexp": "Check Count For Lines Matching Regexp    log_op=${response}    pattern2=0\\\\s+0\\\\s+0\\\\s+0\\\\s+0\\\\s+0\\\\s+0\\\\s+0    pattern1=\\\\d+\\\\s+\\\\d+\\\\s+\\\\d+\\\\s+\\\\d+\\\\s+\\\\d+\\\\s+\\\\d+\\\\s+\\\\d+\\\\s+\\\\d+", "get interface appended with unit number as list": "${intrfc_with_vlan_id_list}    Get Interface Appended With Unit Number As List   interface=${interface_name}  unit_num_list=${vlan_id_list}", "telemetry": "Telemetry    device=${device}    file_name=telemetry_components.json    log_filename=telemetry_log.log    frequency_list=${frequency_list}    port=${port}    api_port=${api_port}    path_list=${path_list}    cli_command=${cli_command}    prefix=${prefix}    key_list=${key_list}    xml_path_list=${xml_path_list}", "verify chassis fpc pic status online": "Verify Chassis Fpc Pic Status Online", "return telnet configured groups name": "Return telnet configured groups name", "execute config command on device": "${response}    Execute Config Command On Device    ${device_handle}    command=commit", "clear and check ixia traffic statistics ecmp": "Clear And Check Ixia Traffic Statistics ecmp       match_list=${match_list}", "get ike exchange type": "Get Ike Exchange Type", "get server link ip": "${ip_of_server_link}    Get Server Link Ip    ifconfig_op=${response}", "reconnect to device": "Reconnect To Device    ${dh}", "should match regexp": "Should Match Regexp   ${response2}    RT_FLOW - RT_FLOW_SESSION_CREATE.*source-address=\"${host_address}\".*destination-address=\"${destination_address}\"", "subtract time from date": "${time_setting}    Subtract Time From Date  ${time_before_set}  2d", "verify chassis sfb or sibs state online": "Verify Chassis Sfb Or Sibs State Online", "convert to uppercase": "${cipher_suite}   Convert To Uppercase   gcm-aes-xpn-128", "calculate pps for each member link": "Calculate PPS For Each Member Link", "verify interface is down during the hold time": "Verify Interface Is Down During The Hold Time    dh=${dh}    interface=${interface}    start_time=${start_time}    during_time_in_milliseconds=${hold_time_up}", "get compare message of vlan": "get compare message of vlan", "run keyword if": "\"${time_after_set_ntp_list}=    Run Keyword If    ${time_after_set_ntp_list_type}!=list    Create List    ${time_after_set_ntp_list}\"", "get non traffic flwng devices": "${non_traffic_flowing_device_list}  Get Non Traffic flwng Devices  device_list=${device_list}  dut=${traffic_flowing_device}", "validate chassis sibs state online and active": "Validate Chassis Sibs State Online And Active", "set test variable": "Set Test Variable    ${FPC_tty_mpc3d}    test cmerror trigger-error 0x40004 0 test 6", "modify traffic rate for stream": "Modify Traffic Rate For Stream    match_list=${ixia_stream_name_list}    traffic_rate=${traffic_rate[0]}", "check time got synced from ntp": "Check time got synced from NTP", "should not contain": "Should Not Contain    ${response_session_state}    ${http_server_ip}/80;tcp", "flap interface": "Flap Interface", "identifying backup re": "Identifying Backup RE        master_RE=${master_RE}", "get the fpc_slot": "Get the fpc_slot", "check ntp status refid": "Check NTP status refid", "get month and day": "${res}    Get Month and Day    test=${response}", "should not be true": "Should Not Be True    ${core_status}", "set delete config": "Set Delete config", "upload file": "Upload File    ${dh}    local_file=/var/tmp/5000_address_book_objects.txt    remote_file=/var/tmp/5000_address_book_objects.txt", "execute cli command on device": "${response}    Execute Cli Command On Device    ${dh}    command=ping ${host_name} rapid    timeout=${10}", "snmp statistics on snmp server": "Snmp statistics on snmp server", "stream based start traffic": "Stream Based Start Traffic", "add time to date": "${current_date_time} =  Add Time To Date      ${current_date_time}    00:02:00"}}